- name: Demo on Variables
  hosts: localhost
  vars_files: #using a file
    - sample-vars.yml
  vars:
    URL: play.example.com
  tasks: #while executing the playbook, tasks will run after roles
    - name: Print URL
      ansible.builtin.debug:
        msg: "URL - {{ URL }}, URL1 - {{  URL1 }}"  # in shell, you access variable with prefix $, here variable will be under {{ }}
                        # if the value starts with variable [ for ex: {{ URL }} is URL], then it requires quotes, and we can use any single or double quotes.
                        # Unlike shell, here in ansible single or double quotes does not have any difference
      vars:
        URL: tasks.example.com

#https://thelinuxcode.com/ansible_debug_module/ - debug module. The Ansible debug module prints statements during playbook execution for troubleshooting purposes.

  roles: #while executing the playbook, roles will run first
    - sample


# Variables precedence
# 1. CLi -e variable : variable is provided while executing the playbook.
# 2. tasks : while executing a task, the variable is defined in the task itself as it is defined above. this is rare.
# 3. roles vars : main.yml under vars under roles. roles folder->vars folder->main.yml
# 4. vars_files : files such as sample-vars.yml
# 5. vars : vars in the same file. here it is play.example.com
# n. roles defaults : main.yml under defaults under roles. defaults folder contains low(est) priority variables. roles folder->defaults folder->main.yml

# Variable types
# 1. simple variable
# 2. List
# 3. Dictionary / Map

- name: Variable type demo
  hosts: localhost
  vars:
    CLASS: devops # plain variable
    timings: # List
      - 6am #index value is 0
      - 7am #index value is 1
    trainers: # dict / map - key/value pair
      6am: John #index value is 6am
      7am: Peter #index value is 7am
  tasks:
    - name: Print
      ansible.builtin.debug:
        msg: "{{ CLASS }} - {{ timings[0] }}, trainer - {{ trainers['6am'] }}"
        # plain variable is being called as is. Note: class cannot be used as a variable.
        # while using list variable, we are using 0 to access the first value of the index under timing.
        # while using a dictionary variable, we are using the key to get the corresponding value. Note that key is defined within quotes.

- name: Variable Data types
  hosts: localhost
  vars:
    number1: 10
    number2: 11.1
    string1: abc
    string2: xyz123
    boolean1: yes
    boolean2: no
    boolean3: true
    boolean4: false
  tasks:
    - name: Print
      ansible.builtin.debug:
        msg: ""

#terraform only supports true/false, not yes/no. shell only supports strings.

- name: Retrieve the output from previous tasks and store in variable
  hosts: localhost
  tasks:
    - ansible.builtin.shell: uptime
      register: out

      #https://thelinuxcode.com/ansible_register_module/. The register module allows you to capture or "register" the output of any Ansible task and save it to a variable.

    - ansible.builtin.debug:
        msg: "{{ out }}"

